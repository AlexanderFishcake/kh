 새 프로젝트 : New Dynamic Web Project
 Default output folder에 아래 주소 입력
 /WebContent/WEB-INF/classes
 Context root : mvc
 Generate web.xml deployment descriptor(배포서술자) 체크.
 새 서버 만들기
 
 servers 우클릭>new>server
 Server name : hellomvc-server
 02_hellomvc만 add>finish
 
WebContent 밑에다가
css 폴더에 css파일
images 폴더에 이미지파일
js 폴더에 javascript파일
index.jsp 생성.

Servers>hellomvc-server 더블클릭
SErver Options>Serve modules without publishing 체크

Open launch configuration>Arguments>VM arguments 뒤에 한칸띄고
-Duser.language=en -Duser.region=US 추가

WEB-INF>views>common 밑에 header.jsp랑 footer.jsp 생성.
	
특별히 지정을 안했다면 index파일을 찾아서 띄워주는데
이 welcome-file은 web.xml에 설정되어있다.

WEB-INF는 client에서 직접 접근할 수 없다.
루트 밑의 sql폴더>hellomvc@web.sql

Create Servlet>URL mappings에 이동하는 주소 복붙 /member/Login
지금은 생성자랑 doGet 필요없으니 체크해제.

Source Folder 생성. (이름: resources)

가져올 파일들
JDBCTemplate.java
ojdbc6.jar
data-resource.properties 안에 user랑 password 둘다 web으로 변경
JDBCTemplate.java 안에
String fileName = JDBCTemplate.class	//클래스 객체
					.getResource("/data-source.properties") //url객체
					.getPath(); //String객체 : 절대경로
resources안에 sql폴더 생성.(아까 만든 resource폴더)

로그인을 유지하기 위해서는
request/response로는 불가능하다.
session은 브라우저별로 관리된다.
생명주기 길이 비교 : 
pageContext<request<session<application

redirect는 뭐고  forward는 뭐냐
forward : servlet이 jsp에게 html작성을 위임할 때 씀
redirect : response.sendRedirect(location)

사용자 정보를 유지하기 위해 데이터를
Server에 저장하면 Session
client에 저장하면 Cookie

페이지에 처음 접근하면 sessionId가 발급된다.
로그인한다고 sessionId를 새로 발급하는게 아니다.
로그아웃하면 session 해제하는데 지금 /mvc로 리다이렉트 해놔서
새롭게 페이지에 처음 접근하는게 돼서 session을 새로 생성한다.

내가 쿠키를 임의로 저장해서 날릴 수 있다.
쿠키 삭제 메소드는 없다. Max-Age를 0으로 만들어서 대체한다.

Session msg가 날아오는 경우는
1. 로그인 성공
2. 로그인 실패
3. 새로고침->은 header.jsp에서 한번 읽고 removeAttribute했으므로 없다.

db의 속성이 변하지 않으면 doGet, 변하면 doPost

<!!!---화면 연결하는방법---!!!>
일단 원하는 jsp 파일 위치에서
1. onclick="location.href='<%=request.getContextPath() %>/member/memberView';"/>
2. 
$frm = $(document.memberUpdateFrm);
$frm.attr("action", "<%= request.getContextPath()%>/member/memberUpdate")
	.attr("method","GET")
	.submit();
console.log($frm);
아무튼 form의 action에 주소 등록하고 GET/POST 방식 정하고 submit하라는 뜻.

memberViewServlet 생성하면서 url에 위의 /member/memberView 복붙
servlet파일의 doGet이나 doPost에 jsp 위임처리로 jsp 위치 알려줌.
request.getRequestDispatcher("/WEB-INF/views/member/memberView.jsp")
		.forward(request, response);
이제 화면 표시할 memberView.jsp 작성.

<%! 느낌표는 선언문. java 파일 만들때 맨 위로 올라간다.

jsp 컴파일 경로 고정하기
WEB_INF > work 폴더 생성. 절대주소 복사.
Servers 프로젝트>hellomvc-server-config>context.tml
<Context workDir="C:\Workspaces\web_server_workspace\02_hellomvc\WebContent\WEB-INF\work">
로 경로 추가

memberDelete 요청시 진행과정
시작 : /member/memberDelete

1. memberView의 deleteMember()호출.
1. mvc/member/memberDelete
1. MemberDeleteServlet(controller)에서 memberService.deleteMember호출. 0/1리턴
1. MemberService에서 memberDao.deleteId호출. 0/1리턴
1. MemberDao에서 db에 sql 요청. 0/1리턴

제가 Network탭을 잘 몰라서요
Network에서 확인할 수 있는 요청이
memberDelete Logout mvc 3가지인데
여기서 이 3개가 브라우저의 요청이라는걸 상태:302를 보고 구별하는건가요?

요청 : header>요청 URL: http://localhost:9090/mvc/member/memberDelete
리다이렉트 : 헤더>응답헤더>Location의 주소 Location: /mvc/member/Logout

서블릿 필터 : 요청과 servlet 사이에 filter를 넣어서 공통된 작업을 수행할 수 있다.

LoggerFilter는 url을 web.xml에 등록해보는 예제
LoginFilter는 /*(모든 요청)에 대한 필터
EncodingFilter는 등록한 URL에만 해당하는 필터

등록한 URL 모아보는법!
1. Servlet
Project Explorer>Deployment Descriptor>Servlet Mappings
2. Filter
Project Explorer>Deployment Descriptor>Filter Mappings

@WebServlet
@WebFilter
@WebListener
로 작성한 클래스들 모두 web.xml에 작성되게 된다.
그걸 Deployment Descriptor(배포서술자)에서 보여주는것.
WEB-INF에 있는 web.xml이랑은 다르다.

제가 처음에 회원정보보기>password칸을 비워놓는다고 한건
password입력란을 공란으로 놓은 다음에
MemberUpdateServlet에서 읽어온 password값이 없으면
password값만 update하지 않는다 였는데
그러면 요청해야되는 sql이 달라지네요 으억

@실습문제: POST /mvc/member/updatePassword
1. 적절한 유효성검사후 폼 제출할 것.
->updatePassword.jsp의 script문에 유효성검사 추가.
2. 기존비밀번호가 일치할때만, 신규비밀번호로 업데이트한다.
   기존비밀번호 일치여부를 어떻게 확인할것인가.
->loginMember에서 가져온 password와 비교한다.
->일치하면 flag=true 내부에 업무로직을 작성함.
->현재 비밀번호 불일치시에는 알림만 띄우고 싶은데 할 줄 모름.
3. 신규비밀번호 업데이트후에는 
	/mvc/member/memberView로 리다이렉트한다.
->성공/실패 둘다 리다이렉트 처리함.
4. 로그인하지 않고 접근시에는 어떻게 할것인가.
->LoginFilter의 @WebFilter에 "/member/memberDelete" 추가함.
5. POST /mvc/member/memberUpdate 는 비밀번호처리를 제외.
->password를 request가 아니라 loginMember에서 가져옴.

회원관리 페이지 구성하기
onclick을 통한 form 제출:
	form 내부의 input:submit 속성을 가진 값들을 제출
			$frm = $(document.memberUpdateFrm);		
			$frm.attr("action", "<%= request.getContextPath() %>/member/memberDelete")
				.attr("method","POST")
				.submit();
숨겨진 form을 통한 제출
			var $frm = $(document.memberRoleUpdateFrm);
			$frm.find("[name=memberId]").val(memberId);
			$frm.find("[name=memberRole]").val(memberRole);
			$frm.submit();

/admin/memberList 관련 Servlet들
검색창 구성	AdminMemberFilderServlet
	getRequestDispatcher로 memberList.jsp에 html작성 위임
표 구성	AdminMemberListServlet
	getRequestDispatcher로 memberList.jsp에 html작성 위임
권한 갱신	AdminMemberRoleUpdateServlet
	sendRedirect 로 memberList로 이동
	
웹 어플리케이션 만들기
중고나라? 인스타그램?

select에
data-member-role="<%=m.getMemberRole()%>" 추가
script에서
if(confirm 다음에 else문을 만들어서
	var originMemberRole = $(this).data("memberRole");
	$(this).val(originMemberRole).prop("selected", true);
작동하는거 같은데 아이디어는 맞겠죠..?

이운산 최민순 윤기상 김경태 김한성

페이징 : 모든 결과를 화면에 표시하지 말고 page를 나누는 것